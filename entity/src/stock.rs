//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;
use serde::{ Serialize, Deserialize };

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "stock")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub symbol: String,
    pub exchange: String,
    #[serde(rename = "companyName")]
    pub company_name: String,
    #[serde(rename = "stockType")]
    pub stock_type: String,
    #[serde(rename = "isNasdaqListed")]
    pub is_nasdaq_listed: Option<bool>,
    #[serde(rename = "isNasdaq100")]
    pub is_nasdaq100: Option<bool>,
    #[serde(rename = "isHeld")]
    pub is_held: Option<bool>,
    #[serde(rename = "secondaryData")]
    pub secondary_data: String,
    #[serde(rename = "marketStatus")]
    pub market_status: String,
    #[serde(rename = "assetClass")]
    pub asset_class: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
