//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;
use async_graphql::SimpleObject;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, SimpleObject, Deserialize, Serialize)]
#[sea_orm(table_name = "stock_entity")]
#[graphql(name = "StockEntity")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub symbol: String,
    pub exchange: String,
    pub company_name: String,
    pub stock_type: String,
    pub is_nasdaq_listed: Option<bool>,
    pub is_nasdaq100: Option<bool>,
    pub is_held: Option<bool>,
    pub secondary_data: String,
    pub market_status: String,
    pub asset_class: String,
    pub created_at: DateTime,
    pub deleted_at: DateTime,
}

pub type StockEntity = Model;

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
