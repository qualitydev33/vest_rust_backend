//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;
use async_graphql::SimpleObject;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, SimpleObject, Deserialize, Serialize)]
#[sea_orm(table_name = "event_entity")]
#[graphql(name = "EventEntity")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub topic: String,
    pub partition: i32,
    pub key: String,
    pub payload: String,
    pub trace_id: String,
    pub event_type: String,
    pub created_at: DateTime,
    pub deleted_at: DateTime,
}

pub type EventEntity = Model;

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
